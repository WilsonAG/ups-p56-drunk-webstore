# -*- coding: utf-8 -*-
"""system_recommended.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16sXuY1CMCNyHRr2O2VZRZbVbsaurrM4E
"""

import turicreate as tc
import pandas as pd
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
# scaled = pd.read_csv('scaled.csv')
normal = pd.read_csv('scaled.csv')

users = [i for i in normal['user']]

users = list(set(users))

train_n, test_n = train_test_split(normal, test_size = .2,random_state=0)
train_data_n = tc.SFrame(train_n)
test_data_n = tc.SFrame(test_n)
print(train_data_n.head(n=5))
print(train_data_n.shape)
print(test_data_n.head(n=5))
print(test_data_n.shape)


pop_norm = tc.popularity_recommender.create(train_data_n,'user','product','quantity')
# recom = pop_norm.recommend(users=users)
# recom.show()
cos_norm = tc.item_similarity_recommender.create(train_data_n,'user','product','quantity',similarity_type='cosine')
# recom = cos_norm.recommend(users=users)
# recom.show()
pear_norm = tc.item_similarity_recommender.create(train_data_n,'user','product','quantity',similarity_type='pearson',verbose=False)
# recom = pear_norm.recommend(users=users)
# recom.show()


models_w_norm = [pop_norm, cos_norm, pear_norm]
names_w_norm = ['Popularity Model', 'Cosine Similarity', 'Pearson Similarity']

eval_norm_n = tc.recommender.util.compare_models(test_data_n, models_w_norm, model_names=names_w_norm,make_plot=True,verbose=False)

rmse =[]
for i in eval_norm_n:     
  for key,value in i.items():
    # print( key," ",value)
    if (key == 'rmse_overall'):
      # print(value)
      rmse.append(value)
print('RMSE Popularity Model with scaled data: ',rmse[0])
print('RMSE Cosine Similarity with scaled data: ',rmse[1])
print('RMSE Pearson Similarity with scaled data: ',rmse[2])

# final_model = tc.item_similarity_recommender.create(tc.SFrame(normal),'user','product','quantity',similarity_type='pearson')
# final_model.save('model_person')

model_load = tc.load_model('model_person')
# # recom=model_load.recommend(tc.SFrame(normal))
# print(len(users))
recom = model_load.recommend(users=['5f13542be1f31a0e685dc17d'])
# recom.show()
# # pop_norm.show()

print(recom)
# print(train_data)
# print(test_data)

